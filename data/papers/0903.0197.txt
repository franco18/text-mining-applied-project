Rotation Distance is Fixed-Parameter Tractable
Sean Cleary

∗

Katherine St. John†

arXiv:0903.0197v1 [cs.DS] 2 Mar 2009

November 3, 2018

Abstract
Rotation distance between trees measures the number of simple operations it takes
to transform one tree into another. There are no known polynomial-time algorithms
for computing rotation distance. In the case of ordered rooted trees, we show that
the rotation distance between two ordered trees is fixed-parameter tractable, in the
parameter, k, the rotation distance. The proof relies on the kernalization of the initial
trees to trees with size bounded by 7k.

1

Introduction

Balancing binary search trees is an important task to ensure good performance for searches.
Rotations are simple transformations that can be used to dynamically adjust trees in an effort
to keep them reasonably balanced. A left or right rotation at a node, shown in Figure 1,
promotes one grandchild, demotes one child, and switches one grandchild to a different
parent node. Sequences of rotations suffice to transform a tree to any other tree with the
same number of nodes. The rotation distance between two trees is the minimum number of
such rotations needed to transform one to the other. There has been a great deal of work on
estimating, bounding and computing this distance. Culik and Wood [10] gave an immediate
upper bound of 2n − 2 for the distance between two trees with n nodes, and in remarkable
work using methods of hyperbolic volume, Sleator, Tarjan, and Thurston [17] showed not
only that 2n − 6 is an upper bound, but furthermore that for all large n, that bound is
realized. There are no known polynomial-time algorithms for computing rotation distance,
though there are estimation algorithms of Pallo [15], Pallo and Baril [2], and Rogers [16].
The NP-hardness of this problem remains open.
We make progress on the computational complexity of rotation distance by showing
that it is fixed-parameter tractable. We show the fixed-parameter tractability by reducing
(or “kernalizing”) the common structures in the trees being compared. The technique of
∗

Department of Mathematics, City College of New York & the Graduate Center, City University of New
York, New York, NY 10031, cleary@sci.ccny.cuny.edu.Partial funding provided by NSF #0811002
†
Department of Mathematics & Computer Science, Lehman College & the Graduate Center, City University of New York, Bronx, NY 10468, stjohn@lehman.cuny.edu. Partial funding provided by NSF #0513660.

1

left

right

Figure 1: A right rotation at a node consists of rotating the right child of the left child of the node
to the left child of the right child of the node. A left rotation is defined similarly by moving the
left child of the right child of the node to the left child of the node. The circled node in the middle
tree has been rotated right to yield the tree on the right, and similarly rotated right to yield the
tree on the left.

kernalizing problem instances has been very successful in showing the tractability of a wide
range of problems [12, 13]. For reduction rules, we use the “subtree reduction” where identical
subtrees are reduced in both, which arises in several settings (including the study of tree pairs
through Thompson’s group F [8, 7, 9]) to produce “reduced tree pairs” which have the same
rotation distance as the original tree pair, as shown in Figure 2. This subtree reduction rule
also preserves biologically interesting distances for phylogenetic trees (roughly, leaf-labeled,
unordered trees). Allen and Steel [1] showed that the biologically motivated “tree-bisectionand-reconnection” (TBR) distance is preserved under the subtree reduction rule, as well as
a reduction rule that shrinks common chains, illustrated in Figure 3. They further show
that the reduced trees have O(k) size, where k is the TBR distance between the trees.
This reduces the question of calculating the TBR distance to comparing trees whose size is
dependent only on k, which is used to prove that TBR distance is fixed-parameter tractable.
Other distance calculations have also been shown to be fixed-parameter tractable via similar
reductions [3, 5, 6].
To show that rotation distance is fixed-parameter tractable, we follow a similar strategy
to those used for phylogenetic tree distances: we show that the subtree and chain reductions
preserve distance and then show that the resulting reduced trees have size bounded by 7k,
where k is the rotation distance. The reductions can be done in linear time [4]. The reduced
trees can be checked in f (k) time to see if their distance is less than or equal to k. While
this check could take exponential time, it depends only on k, yielding the fixed-parameter
tractability of computing rotation distance.

2

2

Background

Rotation Distance
We consider ordered, leaf-labelled, rooted binary trees with n interior nodes and where each
interior node has 2 children. Such trees are commonly called extended binary trees [14] or
full binary trees. In the following, ‘tree’ refers to such a tree with an ordering on the leaves,
‘node’ refers to an interior node, and ‘leaf’ refers to a non-interior node. Our trees will have
n interior nodes and n + 1 leaves numbered in left-to-right order from 0 to n.
Right rotation at a node of a rooted binary tree is defined as as a simple change to T and
is illustrated in Figure 1, taking the middle tree to the right-hand one. Left rotation at a
node is the natural inverse operation. The rotation distance dR (T1 , T2 ) between two rooted
binary trees T1 and T2 with the same number of leaves is the minimum number of rotations
needed to transform T1 to T2 .
The specific instance of the rotation distance problem we address is:
Rotation Distance
Input: Two rooted ordered trees, T1 and T2 on n leaves and parameter k,
Question: Is the rotation distance between them, dR (T1 , T2 ) ≤ k?
There are no known polynomial time algorithms to compute rotation distance, though
there are polynomial time algorithms of Rogers [16], Pallo[15] and Pallo and Baril [2] to
estimate it. The general difficulty of computing rotation distance comes from the lower
bound. Finding a sequence of rotations which accomplish the transformation gives only an
upper bound.

Edge-Flipping Distance
Rooted binary trees correspond naturally to triangulations of polygons via a standard equivalence, described in [17]. A basic move of changing a triangulation is to choose two adjacent
triangles forming a quadrilateral in the polygon, and replace it with two triangles where
the resulting quadrilateral has the opposite diagonal. This edge-flipping move is exactly
equivalent to performing a single rotation on the corresponding rooted trees. We define
edge-flipping distance between two triangulations P1 and P2 of an n-gon to be the minimal
number of such edge-flipping moves to transform P1 to P2 . In Lemma 3b, Sleator, Tarjan
and Thurston [17] show that if two subdivisions P1 and P2 share a common diagonal, then
the diagonal flip distance between P1 and P2 is equal to the sum of the distances between
the polygonal subdivisions obtained by the subpolygons cut off before and after the common
diagonal. The edge-flipping distance between P1 and P2 will be exactly the rotation distance
of their corresponding trees.

Fixed-Parameter Tractability
Roughly, the ability to efficiently calculate instances that are small, with respect to some
parameter, is called fixed-parameter tractability. In our case, the parameter is the distance,
3

subtree
reduction

Figure 2: The subtree reduction rule replaces common subtrees, in the pair of ordered trees on the
same number of leaves, by a placeholder of a single node. A necessary condition is that the leaves
of subtree be labelled (numbered) identically in each of the initial trees. Note that the subtree
enclosed by the dotted line is on the sixth through eighth leaves in the ordering in both trees.
These subtrees are replaced by a single node, indicated by a circle in the right hand pair of trees.
The new reduced trees, like the initial trees, are on the same number of leaves.

k, between the trees. We show that the rotation distance can be solved in time polynomial
in the size of the input (that is, the number of leaves or nodes) but exponential in the size
of a fixed-parameter, k the distance. See Downey and Fellows [11] for more details. More
formally:
Definition 1 A problem Φ is fixed-parameter tractable in a parameter k, if there exists some
constant c (independent of k) and a function f such Φ accepts < x, k > in time O(f (k)|x|c ).

3

Reduction Rules

We use two reduction rules, to reduce the size of the problem. The first rule, as mentioned
above, replaces common subtrees with a single node. The second rule replaces common
chains with a sequence of 3 nodes, as done by Allen and Steel [1]. We will show in the next
section that these reduced trees have distance bounded by f (k) for k the rotation distance
and f a function that depends only on k, not n.
Subtree Reduction: This straightforward reduction eliminates a common subtree and
replaces it with a single placeholder leaf. This reduction is a natural one: Sleator, Tarjan
and Thurston [17] use it in rotation distance, interpreted there as diagonal-flip distance
between triangulations of polygons. It arises naturally in connection with the tree pair
diagrams representing elements of Thompson’s group F [7]. And it also has been used in
the comparison of phylogenetic trees [1]. More formally:
Definition 2 Given ordered trees T1 and T2 on n leaves, if there exists a subtree S that
occurs in both T1 and T2 , an application of the subtree reduction rule consists of replacing
S in both trees by a new leaf s and call the new trees T10 and T20 . See Figure 2.
4

In the context of triangulations of polygons, common subtrees give common diagonals
between the triangulations. Lemma 3b of [17] is that if two triangulations share a common diagonal, then any shortest part realizing the rotation distance will not change that
diagonal. Thus, in terms of the dual trees, the rotation distance is preserved under by the
subtree reduction rule- there will be no rotations which change the common subtrees. Thus,
dR (T1 , T2 ) = dR (T10 , T20 ) if T10 and T20 are the result of applying the subtree rule to T1 and T2 ,
which gives the following lemma:
Lemma 1 [17] The subtree reduction rule preserves rotation distance.
Chain Reduction: This reduction eliminates a (potentially long) chain common to both
trees and replaces it with a short chain consisting of 3 pendant leaves. This is a useful
reduction rule for phylogenetic trees since it does not change many of the common tree
distances. Allen & Steel [1] showed that TBR distance is preserved when long common
chains are replaced by chains of length 3. Variants of this rule have also been used to show
that other biologically inspired calculations are fixed-parameter tractable [3, 5, 6]. Formally,
Definition 3 Given ordered trees T1 and T2 on n leaves, a common chain t1 , t2 , . . . , tm is
a sequence of pendant subtrees that occur identically in T1 and T2 and for which in both T1
and T2 :
• For each j and k such that 1 ≤ j < k ≤, the path between the root and the subtree tj
is shorter than the path between the root and the subtree tk .
• For each j = 1, . . . , m − 1, the parent of the subtree tj is the grandparent of tj+1 , and
• For each j = 1, . . . , m, tj is the left child of its parent in T1 if and only if tj is the right
child of its parent in T2 .
the restrictions of
Definition 4 Given ordered trees T1 and T2 on n leaves, if there exists a common chain
t1 , t2 , . . . , tm that occurs identically in both T1 and T2 , an application of the common chain
reduction rule consists of replacing t1 , t2 , . . . , tm in both trees by a chain of pendant leaves
a, b, c, ordered the same way and calling the new trees T10 and T20 . See Figure 3.
We note that the chain of pendant leaves, a, b, c serve as a placeholder in the reduction
and can be oriented in any way, as long as they meet the definition of a chain.

4

Fixed-Parameter Tractability

To show that rotation distance is fixed-parameter tractable, we first show that the common
chain rule reductions preserve rotation distance. This, combined with the straightforward
fact that subtree rule reductions preserve distances (stated in [17]), gives reduced trees whose
5

chain
reduction

Figure 3: The common chain reduction rule replaces long common chains in ordered trees on the
same number of leaves. Since the trees are ordered, we can assume that the leaves have increasing
labels from 0 to 11. On the left, the common chain, enclosed by the dotted line, consists of the
leaves, 11, 4, 10, 5, and 6, traversing the chain from top to bottom. We apply the chain reduction
to this chain to yield the trees on the right. Note that the resulting trees are on the same number
of leaves and the reduced chain contains leaves 4, 5, and 9, under the new labeling 0 to 9.

size is bounded only by a function of k. To check if the distance between original trees is
at most k, if suffices to check the distance between the reduced trees. This can be done in
O(f (k)) time, where f (k) does not depend on n, but is exponential in k.
Lemma 2 Let T1 and T2 be ordered rooted trees, and T10 and T20 the result of applying the
chain rule reduction to these initial trees. Then dR (T10 , T20 ) = dR (T1 , T2 ).
Proof: Let T1 and T2 be ordered, rooted trees with a common chain, l1 , l2 , . . . , lm , and
let T10 and T20 the result of applying the chain rule reduction to these initial trees. We
consider the dual polygonal subdivisions of the trees. In that case, having a common chain
means having a sequence of adjacent shared diagonals. In Lemma 3b, Sleator, Tarjan and
Thurston [17] show that if two subdivisions P1 and P2 share a common diagonal, then the
diagonal flip distance between P1 and P2 is equal to the sum of the distances between the
polygonal subdivisions obtained by the subpolygons cut off before and after the common
diagonal. Since the sequence of common diagonals (i.e. the common chain) are contiguous,
the distance equals the sum of the distances of the subpolygons above and below the sequence
of diagonals. Shrinking the number of common diagonals does not change the distances.
Thus, the distance between the original trees equals the distances between the reduced
trees: dR (T1 , T2 ) = dR (T10 , T20 ).

The proof of fixed-parameter tractability relies on bounding the size of the reduced trees,
since as noted above, our algorithm consists of reducing the trees to ones with equivalent
distance but size bounded by a function of k and then exhaustively trying all sequences of
≤ k moves to find the distance.
6

Theorem 3 Given two ordered, rooted trees, T1 and T2 with the same number of leaves. Let
T10 and T20 be the result of applying the two reductions rules exhaustively to the given trees.
If d(T1 , T2 ) ≤ k, then |T10 | ≤ 7k.
Proof: Given two ordered, rooted trees, T1 and T2 with the same number of leaves.
Assume that d(T1 , T2 ) ≤ k. We will show, by induction on k, that |T10 | ≤ 7k.
k = 1: Assume that T1 and T2 are not identical and that d(T1 , T2 ) = d(T10 , T20 ) = 1. Then,
a single rotation, at some node N , transforms T10 into T20 . Since by the subtree reduction
rule, identical subtrees have been reduced, the descendants of N are singletons. If N is not
the root, the path from N to the root must be identical in both trees and can have at most
three pendant leaves (since larger common chains and identical subtrees have been reduced).
The other child of the root must be a singleton and identical in both, so, is a single leaf.
Thus, the total number of leaves in T10 is no more than 7.
k > 1: Without loss of generality, we assume that k = d(T1 , T2 ) = d(T10 , T20 ) > 1. Then
there exists trees, I, with the same number of leaves as T1 , and I 0 , with the same number
of leaves as T10 , such that d(T1 , I) = d(T10 , I 0 ) = 1 and d(I, T2 ) = d(I 0 , T20 ) = k − 1. T10 and I 0
differ by a single rotation, r.
First, assume that this first rotation at node N yields a subtree identical to that in T2
(that is, the subtrees rooted at N are identical in I and T2 ). Then, the trees I 0 and T20 are
not reduced (since they have a common subtree rooted at N ). Since their only difference
with the tree pair T10 and T20 occurs at node N , a single subtree reduction will fully reduce
I 0 and T20 . We now argue that the subtree rooted at N can have at most 7 leaves. Since
the subtrees rooted at N are identical in I 0 and T20 , there are no rotations below N in the
tree, and N has exactly 3 leaves below it. As in the base case, N could have a chain of
at most 3 pendant leaves above it. If N is replaced by a single node in I 0 and T20 , yielding
new trees I 00 and T200 , then I 00 and T200 have fewer than |I 0 | − 6 leaves. I 00 and T200 satisfy the
induction hypothesis with d(I 0 , T20 ) = d(I 00 , T200 ) = k − 1, yielding |I 00 | ≤ 7(k − 1). Thus ,
|T10 | ≤ |I 00 | + 6 ≤ 7(k − 1) + 6 ≤ 7k.
Now, assume that this first rotation at node N yields a subtree that is not identical to
that in T2 . Then, the trees I 0 and T20 are fully reduced and have distance k − 1, and we can
apply the induction hypothesis to them, yielding |I 0 | ≤ 7(k − 1). Since |I 0 | = |T10 |, we have
|T10 | = 7(k − 1) < 7k.

From the kernalization of the problem, the fixed-parameter tractability easily follows:
Corollary 4 Rotation distance is fixed-parameter tractable in parameter, k, the distance.
Proof: Given two ordered, rooted trees, T1 and T2 on the same leaf set, and a parameter
k. We define an algorithm for computing “dR (T1 , T2 ) ≤ k” as follows:
1. Let T10 and T20 be the result of applying the two reductions rules exhaustively to the
given trees.
2. If |T10 | > 7k, then output “no.”
3. Else, |T10 | ≤ 7k. Try all sequences of k or less rotations to transform T10 to T20 . If one
such sequence is successful, ouput “yes.”
7

4. Else, if no such sequence transforms T10 to T20 , then output “no.”
Step 1 takes time linear in the number of nodes n, and by Theorem 3 the distances
between the given trees and the reduced trees are the same. Step 3 can take no more than
(7k)k steps. Thus rotation distance is fixed-parameter tractable in the parameter k.

We note that the bound of (7k)k is crude and can be improved either by using any of the
standard exhaustive methods for computing rotation distance which are exponential in 7k,
or by precomputing the rotation distances for pairs of trees of size no more than 7k. The
Catalan numbers C7k count the number of trees of size 7k, and the number of tree pairs to
consider is thus on the order of (47k )2 .

5

Conclusion

We have shown that rotation distance of ordered trees is fixed-parameter tractable in parameter, k, the distance. Step 3 of the algorithm from Section 4 is exponential in the parameter
k, the distance. An obvious remaining open question is “can rotation distance be calculated
in polynomial time?”

References
[1] Benjamin L. Allen and Mike Steel. Subtree transfer operations and their induced metrics on
evolutionary trees. Annals of Combinatorics, 5(1):1–15, 2001.
[2] Jean-Luc Baril and Jean-Marcel Pallo. Efficient lower and upper bounds of the diagonal-flip
distance between triangulations. Information Processing Letters, 100(4):131–136, 2006.
[3] Maria Luisa Bonet and Katherine St. John. On the complexity of uSPR distance. Accepted
to the IEEE/ACM Transactions on Computational Biology and Bioinformatics, 2008.
[4] Maria Luisa Bonet, Katherine St. John, Ruchi Mahindru, and Nina Amenta. Approximating
subtree distances between phylogenies. Journal of Computational Biology, 13(8):1419–1434
(electronic), 2006.
[5] Magnus Bordewich and Charles Semple. On the computational complexity of the rooted
subtree prune and regraft distance. Annals of Combinatorics, 8:409–423, 2004.
[6] Magnus Bordewich and Charles Semple. Computing the minimum number of hybridization
events for a consistent evolutionary history. Discrete Applied Mathematics, 155(8):914–928,
2007.
[7] Sean Cleary. Restricted rotation distance between binary trees. Information Processing Letters,
84(3):333–338, 2002.
[8] Sean Cleary and Jennifer Taback. Bounding restricted rotation distance. Information Processing Letters, 88(5):251–256, 2003.

8

[9] Sean Cleary and Jennifer Taback. Bounding right-arm rotation distances. International Journal of Algebra and Computation, 17(2):369–399, 2007.
[10] Karel Culik II and Derick Wood. A note on some tree similarity measures. Information
Processing Letters, 15(1):39–42, 1982.
[11] Rodney G. Downey, Michael R. Fellows, and Ulrike Stege. Computational tractability: the
view from mars. In Bulletin of the European Association of Theoretical Computer Science,
pages 73–97, 1999.
[12] Michael R. Fellows. The lost continent of polynomial time: Preprocessing and kernelization.
In Proceedings of the 2nd International Workshop on Parameterized and Exact Computation
(IWPEC 2006), volume 4169 of Lecture Notes in Computer Science. Springer, 2006.
[13] Jiong Guo and Rolf Niedermeier. Invitation to data reduction and problem kernelization.
ACM SIGACT NEWS, 38(1):31–45, 2007.
[14] Donald E. Knuth. The Art of Computer Programming. Volume 3. Addison-Wesley, Reading,
Mass, 1973. Sorting and searching.
[15] Jean Pallo. An efficient upper bound of the rotation distance of binary trees. Information
Processing Letters, 73(3-4):87–92, 2000.
[16] R. Rogers. On finding shortest paths in the rotation graph of binary trees. In Proceedings of
the Southeastern International Conference on Combinatorics, Graph Theory, and Computing,
volume 137, pages 77–95, 1999.
[17] Daniel D. Sleator, Robert E. Tarjan, and William P. Thurston. Rotation distance, triangulations, and hyperbolic geometry. Journal of the American Mathematical Society, 1(3):647–681,
1988.

9

